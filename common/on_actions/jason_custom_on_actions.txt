on_startup = {
    fix_zero_dev = yes
    if = {
        limit = {
            ai = no
        }
        make_immortal_ruling_family = yes
        reduce_gold_depletion_chance_on_country_and_subjects = yes
        set_build_time_reduction_on_country_and_subjects = yes
        set_supply_cheat_on_country_and_subjects = yes
        convert_trade_company_provinces_for_country_and_subjects = yes
        adding_all_provinces_to_parliament_and_setting_approval_chance = yes
        fixing_religion_and_culture = yes
        remove_country_modifier = lost_hegemony
        create_homeguard_general = yes
        updating_subject_loyalties = yes

        set_prov_vars = yes
    }
}

on_monthly_pulse = {
    if = {
        limit = {
            ai = no
        }
        extend_golden_age_by_one_year = yes
        fixing_religion_and_culture = yes
        remove_country_modifier = lost_hegemony
        create_homeguard_general = yes
        updating_subject_loyalties = yes
        convert_trade_company_provinces_for_country_and_subjects = yes
        adding_all_provinces_to_parliament_and_setting_approval_chance = yes
        manage_subject_relations_share_maps_and_enforce_peace = yes
        remove_overlapping_cores_and_claims_between_overlord_and_subject = yes
        auto_hire_mil_commandant_advisor_if_needed = yes
        target_zero_vassal_taxes = yes
        make_immortal_ruling_family = yes
        remove_overlord_claims_from_subjects = yes
        increase_colony_growths = yes
        set_imperial_city_dev = yes
        every_subject_country = {
            increase_colony_growths = yes
        }

        if = {
            limit = {
                has_country_flag = jason_set_zero_autonomy_on_precious_provinces_enabled
            }
            set_precious_provinces_to_zero_autonomy = yes
        }

        # Setting tariffs again monthly despite doing it on vassal acquisition just in case events have lowered the tariff in the meantime.
        if = {
            limit = {
                has_country_flag = jason_automatic_max_tariffs_enabled
            }
            automatic_max_tariffs = yes
        }

        if = {
            limit = {
                has_country_flag = jason_set_zero_autonomy_on_all_provinces_enabled
            }
            set_all_provinces_to_zero_autonomy = yes
        }

        if = {
            limit = {
                has_country_flag = jason_gold_dev_enabled
            }
            set_high_gold_dev = yes
        }

        if = {
            limit = {
                has_country_flag = jason_diamonds_dev_enabled
            }
            set_high_diamond_dev = yes
        }

        if = {
            limit = {
                has_country_flag = jason_auto_marry_all_christians_enabled
            }
            marry_all_christians = yes
        }
        
        if = {
            limit = {
                has_country_flag = jason_auto_marry_world_enabled
            }
            marry_everyone = yes
        }

        if = {
            limit = {
                has_country_flag = jason_subjects_auto_core_enabled
            }
            all_subjects_auto_core_themselves = yes
        }

        # Upgrading COTs to level 2 or 3
        upgrade_all_cot_to_level_2 = yes

        if = {
            limit = {
                has_country_flag = jason_auto_upgrade_cot_to_3_enabled
            }
            upgrade_all_cot_to_level_3 = yes
        }

        if = {
            limit = {
                has_country_flag = jason_prov_trade_power_on_all_cot_enabled
            }

            set_prov_trade_power_on_all_cot_for_country_and_subjects = yes
        }
        if = {
            limit = {
                has_country_flag = jason_dev_on_all_cot_enabled
            }

            set_dev_on_all_cot_for_country_and_subjects = yes
        }

        if = {
            limit = {
                has_country_flag = jason_prov_trade_power_on_all_enabled

            }

            set_prov_trade_power_on_all_for_country_and_subjects = yes
        }
    }

    if = {
        limit = {
            is_subject_of_type = mining_corporation
        }
        # Mining corporations should get all their provinces assimilated for maximum gold production.
        every_owned_province = {
            change_religion = owner
            change_culture = owner
        }
    }

    if = {
        limit = {
            is_subject_of_type = consolidated_dominion
        }
        overlord = {
            add_benefits_for_consolidated_dominions = yes
        }
    }

    if = {
        limit = {
            is_subject_of_type = trade_outpost
        }
        overlord = {
            set_trade_power_for_trade_outposts = yes
        }
    }
}

# ROOT = province, FROM = old owner
on_province_owner_change = {
    # Upgrading mining corp provinces
    if = {
        limit = {
            owner = {
                is_mining_corporation = yes
            }
        }
        change_trade_goods = gold
        set_high_dev_resource_gathering_operation = yes
        set_high_dev_cost_reduction_on_prov = yes
        change_religion = owner
        change_culture = owner
    }

    # Upgrading provinces in defensive marches if decision is enabled.
    if = {
        limit = {
            owner = {
                is_subject_of_type = defensive_march 
                overlord = {
                    has_country_flag = jason_defensive_march_enable_high_defensiveness
                }
            }
        }
        set_high_defensiveness_on_prov = yes
            
        owner = {
            set_high_defensiveness_on_country = yes
        }
    }

    # Actions that apply to every owned province: 
    # Convert trade company provinces
    # Adding all provinces to parliament
    # Fixing noreligion and noculture
    # Removing guaranteed religious autonomy
    # Setting high gold and diamond dev
    owner = {
        if = {
            limit = {
                ai = no
            }
            increase_colony_growths = yes
            every_subject_country = {
                increase_colony_growths = yes
            }
            convert_trade_company_provinces_for_country_and_subjects = yes
            adding_all_provinces_to_parliament_and_setting_approval_chance = yes
            fixing_religion_and_culture = yes
            create_homeguard_general = yes
            
            if = {
                limit = {
                    has_country_flag = jason_gold_dev_enabled
                }
                set_high_gold_dev = yes
            }

            if = {
                limit = {
                    has_country_flag = jason_diamonds_dev_enabled
                }
                set_high_diamond_dev = yes
            }

            if = {
                limit = {
                    has_country_flag = jason_subjects_auto_core_enabled
                }
                all_subjects_auto_core_themselves = yes
            }

            # Setting autonomy to 0 if the cheat is enabled.
            if = {
                limit = {
                    has_country_flag = jason_set_zero_autonomy_on_precious_provinces_enabled
                }
                set_precious_provinces_to_zero_autonomy = yes
            }
    
            if = {
                limit = {
                    has_country_flag = jason_set_zero_autonomy_on_all_provinces_enabled
                }
                set_all_provinces_to_zero_autonomy = yes
            }
        }
    }

    # Setting trade power cheats on COTs if decision is enabled.
    owner = {
        if = {
            limit = {
                OR = {
                    has_country_flag = jason_prov_trade_power_on_all_cot_enabled
                    overlord = {
                        has_country_flag = jason_prov_trade_power_on_all_cot_enabled
                    }
                }
            }

            set_prov_trade_power_on_all_cot_for_country_and_subjects = yes
        }
        if = {
            limit = {
                OR = {
                    has_country_flag = jason_dev_on_all_cot_enabled
                    overlord = {
                        has_country_flag = jason_dev_on_all_cot_enabled
                    }
                }
            }

            set_dev_on_all_cot_for_country_and_subjects = yes
        }
        if = {
            limit = {
                OR = {
                    has_country_flag = jason_prov_trade_power_on_all_enabled
                    overlord = {
                        has_country_flag = jason_prov_trade_power_on_all_enabled
                    }
                }
            }

            set_prov_trade_power_on_all_for_country_and_subjects = yes
        }

        # Upgrading COTs to level 2 or 3
        if = {
            limit = {
                OR = {
                    ai = no
                    overlord = {
                        ai = no
                    }
                }
            }

            upgrade_all_cot_to_level_2 = yes

            if = {
                limit = {
                    OR = {
                        has_country_flag = jason_auto_upgrade_cot_to_3_enabled
                        overlord = {
                            has_country_flag = jason_auto_upgrade_cot_to_3_enabled
                        }
                    }
                }
                upgrade_all_cot_to_level_3 = yes
            }
        }
    }
}


# ROOT = overlord, FROM = subject
on_dependency_gained = {
	# Subject
    FROM = {
		if = {
			limit = {
                is_mining_corporation = yes
			}
            change_all_provinces_to_gold = yes
            set_high_dev_on_all_gold_prov = yes
            set_high_dev_cost_reduction_on_all_gold_and_silver_prov = yes
            every_owned_province = {
                change_religion = owner
                change_culture = owner
            }
		}
        if = {
            limit = {
                is_subject_of_type = imperial_city
            }
            set_imperial_city_dev = yes
        }

        if = {
            limit = {
                is_subject_of_type = defensive_march 
                ROOT = {
                    has_country_flag = jason_defensive_march_enable_high_defensiveness
                }
            }

            every_owned_province = {
                set_high_defensiveness_on_prov = yes
            }
                
            set_high_defensiveness_on_country = yes
        }

        if = {
            limit = {
                is_subject_of_type = consolidated_dominion
            }
            overlord = {
                add_benefits_for_consolidated_dominions = yes
            }
        }

        if = {
            limit = {
                is_subject_of_type = trade_outpost
            }
            overlord = {
                set_trade_power_for_trade_outposts = yes
            }
        }
	}

    # Overlord
    ROOT = {
        if = {
            limit = {
                ai = no
            }
            reduce_gold_depletion_chance_on_country_and_subjects = yes
            set_build_time_reduction_on_country_and_subjects = yes
            set_supply_cheat_on_country_and_subjects = yes
            convert_trade_company_provinces_for_country_and_subjects = yes
            create_homeguard_general = yes
            updating_subject_loyalties = yes
            target_zero_vassal_taxes = yes

            # Upgrading COTs to level 2 or 3
            upgrade_all_cot_to_level_2 = yes

            # Setting autonomy to 0 if the cheat is enabled.
            if = {
                limit = {
                    has_country_flag = jason_set_zero_autonomy_on_precious_provinces_enabled
                }
                set_precious_provinces_to_zero_autonomy = yes
            }

            if = {
                limit = {
                    has_country_flag = jason_subjects_auto_core_enabled
                }
                all_subjects_auto_core_themselves = yes
            }

            if = {
                limit = {
                    has_country_flag = jason_automatic_max_tariffs_enabled
                }
                automatic_max_tariffs = yes
            }
    
            if = {
                limit = {
                    has_country_flag = jason_set_zero_autonomy_on_all_provinces_enabled
                }
                set_all_provinces_to_zero_autonomy = yes
            }

            if = {
                limit = {
                    has_country_flag = jason_auto_upgrade_cot_to_3_enabled
                }
                upgrade_all_cot_to_level_3 = yes
            }
        }

        if = {
            limit = {
                has_country_flag = jason_prov_trade_power_on_all_cot_enabled
            }

            set_prov_trade_power_on_all_cot_for_country_and_subjects = yes
        }
        if = {
            limit = {
                has_country_flag = jason_dev_on_all_cot_enabled
            }

            set_dev_on_all_cot_for_country_and_subjects = yes
        }
        if = {
            limit = {
                has_country_flag = jason_prov_trade_power_on_all_enabled
            }

            set_prov_trade_power_on_all_for_country_and_subjects = yes
        }
    }
}

on_new_monarch = {
    if = {
        limit = {
            ai = no
        }
        # No infinite loop since new monarch will have 6/6/6 stats, thus not triggering a new monarch creation.
        make_immortal_ruling_family = yes
    }
}

on_new_consort = {
    if = {
        limit = {
            ai = no
        }
        make_immortal_ruling_family = yes
    }
}
on_new_heir = {
    if = {
        limit = {
            ai = no
        }
        make_immortal_ruling_family = yes
    }
}
on_heir_death = {
    if = {
        limit = {
            ai = no
        }
        make_immortal_ruling_family = yes
    }
}
on_queen_death = {
    if = {
        limit = {
            ai = no
        }
        make_immortal_ruling_family = yes
    }
}

# root = location, from = country doing it
on_added_to_trade_company = {
    if = {
        limit = {
            owner = {
                ai = no
            }
        }
        owner = {
            convert_trade_company_provinces_for_country_and_subjects = yes
        }
    }
}

# # TODO if we save the advisor type in pre fire and then rehire in post we could potentially enable auto-rehiring of advisors
# on_post_adm_advisor_fired = {
#     # auto_hire_adm_natural_scientist_advisor = yes
# }

# # this = country
# on_post_dip_advisor_fired = {
#     # Nothing for now
# }

# # this = country
on_post_mil_advisor_fired = {
	auto_hire_mil_commandant_advisor = yes
}